package org.sohagroup.crmconnector.domain.crm.model;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.4.1 2021-01-05T18:53:52.789+03:30 Generated source version: 3.4.1
 */
@WebServiceClient(name = "OrganizationService",
    wsdlLocation = "file:/home/feynman/Developer/projects/Soha/mobin-esb/b2bcrm/src/main/resources/xsd/b2bDevelopment.xsd",
    targetNamespace = "http://schemas.microsoft.com/xrm/2011/Contracts/Services")
public class OrganizationService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://schemas.microsoft.com/xrm/2011/Contracts/Services",
        "OrganizationService");
    public final static QName CustomBindingIOrganizationService = new QName(
        "http://schemas.microsoft.com/xrm/2011/Contracts/Services", "CustomBinding_IOrganizationService");

    static {
        URL url = null;
        try {
            url = new URL(
                "file:/home/feynman/Developer/projects/Soha/mobin-esb/b2bcrm/src/main/resources/xsd/b2bDevelopment.xsd");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(OrganizationService.class.getName())
                .log(java.util.logging.Level.INFO,
                    "Can not initialize the default wsdl from {0}",
                    "file:/home/feynman/Developer/projects/Soha/mobin-esb/b2bcrm/src/main/resources/xsd/b2bDevelopment.xsd");
        }
        WSDL_LOCATION = url;
    }

    public OrganizationService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public OrganizationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OrganizationService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public OrganizationService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public OrganizationService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public OrganizationService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }


    /**
     * @return returns IOrganizationService
     */
    @WebEndpoint(name = "CustomBinding_IOrganizationService")
    public IOrganizationService getCustomBindingIOrganizationService() {
        return super.getPort(CustomBindingIOrganizationService, IOrganizationService.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the
     *                 <code>features</code> parameter will have their default values.
     * @return returns IOrganizationService
     */
    @WebEndpoint(name = "CustomBinding_IOrganizationService")
    public IOrganizationService getCustomBindingIOrganizationService(WebServiceFeature... features) {
        return super.getPort(CustomBindingIOrganizationService, IOrganizationService.class, features);
    }

}
